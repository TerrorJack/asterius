version: 2.1

jobs:
  asterius-boot:
    docker:
      - image: terrorjack/asterius:dev
    environment:
      - ASTERIUS_BUILD_OPTIONS: -j2
      - MAKEFLAGS: -j2
    steps:
      - checkout
      - run:
          name: Boot
          command: |
            stack --no-terminal -j2 install --test --no-run-tests asterius
            . .envrc
            ahc-boot
      - persist_to_workspace:
          root: /home/asterius
          paths:
            - .local
            - .stack
            - project/.stack-work
            - project/asterius/.stack-work
            - project/ghc-toolkit/.stack-work
            - project/npm-utils/.stack-work
            - project/wasm-toolkit/.stack-work

  asterius-test:
    docker:
      - image: terrorjack/asterius:dev
    steps:
      - checkout
      - attach_workspace:
          at: /home/asterius
      - run:
          name: Test asterius
          command: |
            stack --no-terminal test asterius:fib
            stack --no-terminal test asterius:jsffi
            stack --no-terminal test asterius:array
            stack --no-terminal test asterius:stableptr
            stack --no-terminal test asterius:rtsapi
            stack --no-terminal test asterius:teletype
            stack --no-terminal test asterius:bytearray
            stack --no-terminal test asterius:bigint
            stack --no-terminal test asterius:todomvc
            stack --no-terminal test asterius:cloudflare
            stack --no-terminal test asterius:exception
            stack --no-terminal test asterius:regression60
            stack --no-terminal test asterius:sizeof_md5context
            stack --no-terminal test asterius:largenum
            stack --no-terminal test asterius:bytearray --test-arguments="--yolo"
            stack --no-terminal test asterius:bytearray --test-arguments="--gc-threshold=128"
            stack --no-terminal test asterius:fib --test-arguments="--no-gc-sections"
            stack --no-terminal test asterius:fib --test-arguments="--backend=binaryen --no-gc-sections"

            stack --no-terminal test asterius:fib --test-arguments="--debug" > /dev/null
            stack --no-terminal test asterius:jsffi --test-arguments="--debug" > /dev/null
            stack --no-terminal test asterius:array --test-arguments="--debug" > /dev/null
            stack --no-terminal test asterius:stableptr --test-arguments="--debug" > /dev/null
            stack --no-terminal test asterius:rtsapi --test-arguments="--debug" > /dev/null
            stack --no-terminal test asterius:teletype --test-arguments="--debug" > /dev/null
            # stack --no-terminal test asterius:bytearray --test-arguments="--debug" > /dev/null
            stack --no-terminal test asterius:bigint --test-arguments="--debug" > /dev/null
            stack --no-terminal test asterius:exception --test-arguments="--debug" > /dev/null

            stack --no-terminal test asterius:fib --test-arguments="--tail-calls"
            stack --no-terminal test asterius:fib --test-arguments="--tail-calls --no-gc-sections"

            stack --no-terminal test asterius:nomain
            stack --no-terminal test asterius:nomain --test-arguments="--tail-calls"

            stack --no-terminal test asterius:th

  asterius-test-cabal:
    docker:
      - image: terrorjack/asterius:dev
    steps:
      - checkout
      - attach_workspace:
          at: /home/asterius
      - run:
          name: Test ahc-cabal
          command: |
            . .envrc
            ahc-cabal new-update
            ahc-cabal new-install -j1 --installdir . \
              hello
            ahc-dist --input-exe hello --run

            cd ghc-toolkit/boot-libs
            ahc-cabal v1-install -j2 --package-db=clear --package-db=global \
              contravariant-extras

  asterius-test-ghc-testsuite:
    docker:
      - image: terrorjack/asterius:dev
    environment:
      - GHCRTS: -N2
    steps:
      - checkout
      - attach_workspace:
          at: /home/asterius
      - run:
            name: Run GHC test suite on asterius
            # Allow a large timeout so we have enough time to write out the
            # CSV file.
            no_output_timeout: 30m
            command: |
              # run the GHC testsuite and copy the test artifact to `/tmp`
              node --version


              # run test cases that can fail.
              stack --no-terminal test asterius:ghc-testsuite --test-arguments="-j2 --timeout=180s" || true
              cp asterius/test-report.csv /tmp
      - store_artifacts:
          path: /tmp/test-report.csv

  asterius-test-ghc-testsuite-yolo:
    docker:
      - image: terrorjack/asterius:dev
    environment:
      - ASTERIUS_GHC_TESTSUITE_OPTIONS: --yolo
      - GHCRTS: -N2
    steps:
      - checkout
      - attach_workspace:
          at: /home/asterius
      - run:
            name: Run GHC test suite on asterius
            # Allow a large timeout so we have enough time to write out the
            # CSV file.
            no_output_timeout: 30m
            command: |
              # run the GHC testsuite and copy the test artifact to `/tmp`
              node --version


              # run test cases that can fail.
              stack --no-terminal test asterius:ghc-testsuite --test-arguments="-j2 --timeout=180s" || true
              cp asterius/test-report.csv /tmp
      - store_artifacts:
          path: /tmp/test-report.csv

  asterius-test-ghc-testsuite-debug:
    docker:
      - image: terrorjack/asterius:dev
    environment:
      - ASTERIUS_GHC_TESTSUITE_OPTIONS: --debug
      - GHCRTS: -N2
    steps:
      - checkout
      - attach_workspace:
          at: /home/asterius
      - run:
            name: Run GHC test suite on asterius
            # Allow a large timeout so we have enough time to write out the
            # CSV file.
            no_output_timeout: 30m
            command: |
              # run the GHC testsuite and copy the test artifact to `/tmp`
              node --version


              # run test cases that can fail.
              stack --no-terminal test asterius:ghc-testsuite --test-arguments="-j2 --timeout=180s" || true
              cp asterius/test-report.csv /tmp
      - store_artifacts:
          path: /tmp/test-report.csv

  asterius-test-ghc-testsuite-debug-yolo:
    docker:
      - image: terrorjack/asterius:dev
    environment:
      - ASTERIUS_GHC_TESTSUITE_OPTIONS: --debug --yolo
      - GHCRTS: -N2
    steps:
      - checkout
      - attach_workspace:
          at: /home/asterius
      - run:
            name: Run GHC test suite on asterius
            # Allow a large timeout so we have enough time to write out the
            # CSV file.
            no_output_timeout: 30m
            command: |
              # run the GHC testsuite and copy the test artifact to `/tmp`
              node --version


              # run test cases that can fail.
              stack --no-terminal test asterius:ghc-testsuite --test-arguments="-j2 --timeout=180s" || true
              cp asterius/test-report.csv /tmp
      - store_artifacts:
          path: /tmp/test-report.csv

  asterius-build-docs:
    docker:
      - image: terrorjack/asterius:dev
    steps:
      - run:
          name: Ensure we are on `tweag/asterius`
          command: |
            if [ -n "$CIRCLE_PR_NUMBER" ]; then
              echo "Nothing to do for forked PRs, so marking this step successful"
              circleci step halt
            fi
      - run:
          name: Install dependencies
          command: |
            npm install -g netlify-cli
      - checkout
      - run:
          name: Build & push docs
          command: |
            cd docs
            sphinx-build . _build
            if [ $CIRCLE_BRANCH = "master" ]
            then
              netlify deploy --dir=_build --message="$CIRCLE_SHA1" --prod
            else
              netlify deploy --dir=_build --message="$CIRCLE_SHA1"
            fi

workflows:
  version: 2
  build:
    jobs:
      - asterius-boot
      - asterius-test:
          requires:
            - asterius-boot
      - asterius-test-cabal:
          requires:
            - asterius-boot
      - asterius-test-ghc-testsuite:
          requires:
            - asterius-boot
      - asterius-test-ghc-testsuite-yolo:
          requires:
            - asterius-boot
      - asterius-test-ghc-testsuite-debug:
          requires:
            - asterius-boot
      - asterius-test-ghc-testsuite-debug-yolo:
          requires:
            - asterius-boot
      - asterius-build-docs
