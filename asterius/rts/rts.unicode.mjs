export class Unicode {
    constructor(logger) {
        Object.seal(this);
    }

    u_iswalpha(code) {
        return (code >= 'A'.codePointAt(0) && code <= 'Z'.codePointAt(0)) ||
            (code >= 'a'.codePointAt(0) && code <= 'z'.codePointAt(0));
    }

    u_iswalnum(code) {
        return (code >= '0'.codePointAt(0) && code <= '9'.codePointAt(0)) || this.u_iswalpha(code);
    }

    u_iswupper(code) {
        return code >= 'A'.codePointAt(0) && code <= 'Z'.codePointAt(0);
    }

    u_iswlower(code) {
        return code >= 'a'.codePointAt(0) && code <= 'z'.codePointAt(0);
    }

    u_towlower(code) {
        return String.fromCharCode(code).toLowerCase().codePointAt(0);
    }

    u_towupper(code) {
        return String.fromCharCode(code).toUpperCase().codePointAt(0);
    }

    u_towtitle(code){
        return u_toupper(code);
    }

    // Generated from asterius/asterius/rts/genunicode.hs
    u_gencat(c) { 
        var lookup = [25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,22,17,17,17,19,17,17,17,13,14,17,18,17,12,17,17,8,8,8,8,8,8,8,8,8,8,17,17,18,18,18,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,17,14,20,11,20,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,13,18,14,18,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,22,17,19,19,19,19,21,17,20,21,4,15,18,26,21,20,21,18,10,10,20,1,17,17,20,10,4,16,10,10,10,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,18,1,1,1,1,1,1,1,1];
        console.assert(c >= 0 && c < 255);
        return lookup[c]; 
    }

    u_iswcntrl(c) { 
        var lookup = [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
        console.assert(c >= 0 && c < 255);
        return lookup[c]; 
    } 

    u_iswprint(c) { 
        var lookup = [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
        console.assert(c >= 0 && c < 255);
        return lookup[c]; 
    }
}
